// Mocks generated by Mockito 5.0.16 from annotations
// in movie_search/test/unit/list_cubit_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:either_dart/either.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:movie_search/api/api_manager.dart' as _i3;
import 'package:movie_search/model/api_error/api_error.dart' as _i5;
import 'package:movie_search/model/movie_details/movie_details.dart' as _i7;
import 'package:movie_search/model/movies_list_response/movies_list_response.dart'
    as _i6;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [ApiManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiManager extends _i1.Mock implements _i3.ApiManager {
  MockApiManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.ApiError, _i6.MoviesListResponse>> loadMovieList(
          String? input, int? page) =>
      (super.noSuchMethod(Invocation.method(#loadMovieList, [input, page]),
          returnValue:
              Future<_i2.Either<_i5.ApiError, _i6.MoviesListResponse>>.value(
                  _FakeEither_0<_i5.ApiError, _i6.MoviesListResponse>())) as _i4
          .Future<_i2.Either<_i5.ApiError, _i6.MoviesListResponse>>);
  @override
  _i4.Future<_i2.Either<_i5.ApiError, _i7.MovieDetails>> loadMovieDetails(
          int? movieId) =>
      (super.noSuchMethod(Invocation.method(#loadMovieDetails, [movieId]),
          returnValue: Future<_i2.Either<_i5.ApiError, _i7.MovieDetails>>.value(
              _FakeEither_0<_i5.ApiError, _i7.MovieDetails>())) as _i4
          .Future<_i2.Either<_i5.ApiError, _i7.MovieDetails>>);
  @override
  String toString() => super.toString();
}
